5. Longest Palindromic Substring
https://www.youtube.com/watch?v=XYQecbcd6_c
class Solution:
    def longestPalindrome(self, s: str) -> str:
        res = ""
        resLen = 0
        for i in range(len(s)):
            #odd situation:
            l,r=i,i
            while l>=0 and r<len(s) and s[l] == s[r]:
                if (r-l+1)>resLen:
                    res = s[l:r+1]
                    resLen = r-l+1
                l-=1
                r+=1
            #even:
            l,r = i,i+1
            while l>=0 and r<len(s) and s[l] == s[r]:
                if (r-l+1)>resLen:
                    res = s[l:r+1]
                    resLen = r-l+1
                l-=1
                r+=1
        return res  
        
22. Generate Parentheses
https://www.youtube.com/watch?v=s9fokUqJ76A
class Solution:
    def generateParenthesis(self, n: int) -> List[str]:
        res = []
        def backtracing(openN, closeN, stack):
            if openN == closeN == n:
                res.append("".join(stack))
                return
            if openN < n:
                backtracing(openN+1,closeN,stack+["("])
            if closeN < openN:
                backtracing(openN, closeN+1,stack+[")"])
        backtracing(0,0,[])
        return res
        
45. Jump Game II
class Solution:
    def jump(self, nums: List[int]) -> int:
        res = 0
        l = r = 0
        while (r<len(nums)-1):
            farthest = 0
            for i in range(l,r+1):
                farthest = max(farthest,i+nums[i])
            l = r+1
            r = farthest
            res += 1
        return res
55. Jump Game
class Solution:
    def canJump(self, nums: List[int]) -> bool:

        if len(nums) == 1:
            return True

        l=r=0
        while (r<len(nums)-1):
            farest = 0
            for i in range(l,r+1):
                farest = max(farest,i+nums[i])
            if farest == 0:
                return False
            l = r+1
            r = farest
            if l <= len(nums)-1 <= r:
                return True
        return False
        

        
